(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{393:function(e,t,r){"use strict";r.r(t);var a=r(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"json-guidelines"}},[e._v("JSON Guidelines")]),e._v(" "),r("p",[e._v("These guidelines provides recommendations for defining JSON data. JSON here refers to "),r("a",{attrs:{href:"http://www.rfc-editor.org/rfc/rfc7159.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 7159"),r("OutboundLink")],1),e._v(" (which updates "),r("a",{attrs:{href:"https://www.ietf.org/rfc/rfc4627.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4627"),r("OutboundLink")],1),e._v("),\nthe “application/json” media type and custom JSON media types defined for APIs. The guidelines clarifies some specific\ncases to allow JSON data to have an idiomatic form across teams and services.")]),e._v(" "),r("h2",{attrs:{id:"must-use-consistent-property-names"}},[e._v("Must: Use Consistent Property Names")]),e._v(" "),r("h2",{attrs:{id:"must-property-names-must-be-snake-case-and-never-camelcase"}},[e._v("Must: Property names must be snake_case (and never camelCase).")]),e._v(" "),r("p",[e._v("No established industry standard exists, but many popular Internet companies prefer snake_case: e.g. GitHub, Stack Exchange,\nTwitter. Others, like Google and Amazon, use both - but not only camelCase. It’s essential to establish a consistent look and\nfeel such that JSON looks as if it came from the same hand.")]),e._v(" "),r("h2",{attrs:{id:"must-property-names-must-be-an-ascii-subset"}},[e._v("Must: Property names must be an ASCII subset")]),e._v(" "),r("p",[e._v("Property names are restricted to ASCII encoded strings. The first character must be a letter, an underscore or a dollar sign,\nand subsequent characters can be a letter, an underscore, a dollar sign, or a number.")]),e._v(" "),r("h2",{attrs:{id:"must-use-consistent-property-values"}},[e._v("Must: Use Consistent Property Values")]),e._v(" "),r("h2",{attrs:{id:"must-boolean-property-values-must-not-be-null"}},[e._v("Must: Boolean property values must not be null")]),e._v(" "),r("p",[e._v("Schema based JSON properties that are by design booleans must not be presented as nulls. A boolean is essentially a closed\nenumeration of two values, true and false. If the content has a meaningful null value, strongly prefer to replace the boolean\nwith enumeration of named values or statuses - for example accepted_terms_and_conditions with true or false can be replaced\nwith terms_and_conditions with values yes, no and unknown.")]),e._v(" "),r("h2",{attrs:{id:"must-date-property-values-should-conform-to-rfc-3399"}},[e._v("Must: Date property values should conform to RFC 3399")]),e._v(" "),r("p",[e._v("Use the date and time formats defined by "),r("a",{attrs:{href:"http://tools.ietf.org/html/rfc3339#section-5.6",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 3339"),r("OutboundLink")],1),e._v(":")]),e._v(" "),r("ul",[r("li",[e._v('for "date" use strings matching '),r("code",[e._v('date-fullyear "-" date-month "-" date-mday')]),e._v(", for example: "),r("code",[e._v("2015-05-28")])]),e._v(" "),r("li",[e._v('for "date-time" use strings matching '),r("code",[e._v('full-date "T" full-time')]),e._v(", for example "),r("code",[e._v("2015-05-28T14:07:17Z")])])]),e._v(" "),r("p",[e._v("Note that the "),r("a",{attrs:{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenAPI"),r("OutboundLink")],1),e._v(' format\n"date-time" corresponds to "date-time" in the RFC) and '),r("code",[e._v("2015-05-28")]),e._v(' for a date (note that the OpenAPI format "date" corresponds\nto "full-date" in the RFC). Both are specific profiles, a subset of the international standard '),r("a",{attrs:{href:"http://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"}},[e._v("ISO 8601"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("A zone offset may be used (both, in request and responses) -- this is simply defined by the standards. However, we encourage\nrestricting dates to UTC and without offsets. For example "),r("code",[e._v("2015-05-28T14:07:17Z")]),e._v(" rather than "),r("code",[e._v("2015-05-28T14:07:17+00:00")]),e._v(". From\nexperience we have learned that zone offsets are not easy to understand and often not correctly handled. Note also that zone\noffsets are different from local times that might be including daylight saving time. Localization of dates should be done by\nthe services that provide user interfaces, if required.")]),e._v(" "),r("p",[e._v("When it comes to storage, all dates should be consistently stored in UTC without a zone offset. Localization should be done\nlocally by the services that provide user interfaces, if required.")]),e._v(" "),r("p",[e._v("Sometimes it can seem data is naturally represented using numerical timestamps, but this can introduce interpretation issues\nwith precision - for example whether to represent a timestamp as 1460062925, 1460062925000 or 1460062925.000. Date strings,\nthough more verbose and requiring more effort to parse, avoid this ambiguity.")]),e._v(" "),r("h2",{attrs:{id:"must-standards-must-be-used-for-language-country-and-currency"}},[e._v("Must: Standards must be used for Language, Country and Currency")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",target:"_blank",rel:"noopener noreferrer"}},[e._v("ISO 3166-1-alpha2"),r("OutboundLink")],1),e._v(' country (It\'s "GB", not "UK")')]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",target:"_blank",rel:"noopener noreferrer"}},[e._v("ISO 639-1"),r("OutboundLink")],1),e._v(" language code; "),r("a",{attrs:{href:"https://tools.ietf.org/html/bcp47",target:"_blank",rel:"noopener noreferrer"}},[e._v("BCP-47"),r("OutboundLink")],1),e._v(" (based on ISO 639-1) for language variants")]),e._v(" "),r("li",[r("a",{attrs:{href:"http://en.wikipedia.org/wiki/ISO_4217",target:"_blank",rel:"noopener noreferrer"}},[e._v("ISO 4217"),r("OutboundLink")],1),e._v(" currency codes")])]),e._v(" "),r("h2",{attrs:{id:"should-reserved-javascript-keywords-should-be-avoided"}},[e._v("Should: Reserved JavaScript keywords should be avoided")]),e._v(" "),r("p",[e._v("Most API content is consumed by non-JavaScript clients today, but for security and sanity reasons, JavaScript (strictly, ECMAScript) keywords are worth avoiding. A list of keywords can be found in the "),r("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/#sec-reserved-words",target:"_blank",rel:"noopener noreferrer"}},[e._v("ECMAScript Language Specification"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"should-array-names-should-be-pluralized"}},[e._v("Should: Array names should be pluralized")]),e._v(" "),r("p",[e._v("To indicate they contain multiple values prefer to pluralize array names. This implies that object names should in turn be singular.")]),e._v(" "),r("h2",{attrs:{id:"should-null-values-should-not-have-their-fields-removed"}},[e._v("Should: Null values should not have their fields removed")]),e._v(" "),r("h2",{attrs:{id:"should-empty-array-values-should-not-be-null"}},[e._v("Should: Empty array values should not be null")]),e._v(" "),r("p",[e._v("Empty array values can unambiguously be represented as the the empty list, [].")]),e._v(" "),r("h2",{attrs:{id:"should-enumerations-should-be-represented-as-strings"}},[e._v("Should: Enumerations should be represented as Strings")]),e._v(" "),r("p",[e._v("Strings are a reasonable target for values that are by design enumerations.")])])}),[],!1,null,null,null);t.default=s.exports}}]);